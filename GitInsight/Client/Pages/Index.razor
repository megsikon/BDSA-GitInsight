@using System.Net.Http;
@using System.Net.Http.Json
@using System.Threading.Tasks

@inject HttpClient Http
@inject NavigationManager NavManager


@page "/"

<h1>Hello, world!</h1>


<button>don't press me. really. i'm serious</button>

<input @bind="repoURL" placeholder="Repo URL" />
<button @onclick="AddItem">Add</button>


@code {
    private CommitData[]? allCommitData;
    private string? newHasCode;
    private string? repoURL;
    private DateTime newDateTime;
    private string? newAuthorName;

}

<button onclick=@(async () => await PrintWebApiResponse())>Print Web API Response</button>

@* <button onclick=@(async () => await FillWithDemoData())>Fill with demo data</button>
    <button onclick=@(async () => await DeleteAllCustomers())>Delete all customers</button> *@

@if (allCommitData == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class='table'>
    <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Date</th>
            <th>Count</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var authorData in allCommitData)
            {
                <tr>
                    <td>@authorData.RepositoryName</td>
                    <td>@authorData.AuthorName</td>
                    <td>@authorData.Date</td>
                </tr>
            }
        </tbody>
    </table>
}

@functions {
    protected override async Task OnInitializedAsync()
    {
        @* allCommitData = await Http.GetFromJsonAsync<CommitData[]>("api/CommitDataRepository/CD_ReadAll");
        await RefreshAllCommitData(); *@
    }
    private async Task AddItem()
    {
        // OldData repo = new OldData(repoURL);
        
        // NavManager.NavigateTo("/fetch-data-via-factory");
    }

    // THESE ARE PASTE:

    private async Task RefreshAllCommitData()
    {
        allCommitData = await Http.GetFromJsonAsync<CommitData[]>("api/CommitDataRepository/CD_ReadAll");
        StateHasChanged();
    }

    
    private async Task PrintWebApiResponse()
    {
        var response = await Http.GetStringAsync("api/AuthorDataRepository/AD_ReadAll");
        Console.WriteLine(response);
    }

}